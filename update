#!/bin/sh

usage () {
  cat <<EOF
Update repo with files from theatre-classique.fr

Usage: $0 [--all | --help]

OPTIONS:
  -a, --all       update all files including existing ones
  -d, --delay     number of seconds to wait between requests (default: 1)
  -h, --help      show this message

EOF
}

# options parsing inspired by
# https://medium.com/@Drew_Stokes/bash-argument-parsing-54f3b81a6a8f

ALL=""
PARAMS=""
DELAY=1

while (( "$#" )); do
  case "$1" in
    -h|--help)
      usage
      exit 0
      ;;
    -a|--all)
      ALL=yes
      shift
      ;;
    -v|--verbose)
      VERBOSE=yes
      shift
      ;;
    -d|--delay)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        re='^[0-9.]+$'
        if ! [[ $2 =~ $re ]]; then
          echo "Delay must be a number!"
          exit 1
        fi
        PORT=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done

# set positional arguments in their proper place
eval set -- "$PARAMS"

# page to scrape the TEI URLs from
INDEX_URL="http://theatre-classique.fr/pages/programmes/PageEdition.php"

# directory with original downloads
TARGET_DIR=./xml

LYNX="lynx -listonly -nonumbers -dump $INDEX_URL"
GREP="grep /pages/documents/"

if ! [ -d $TARGET_DIR ]; then
  mkdir -p $TARGET_DIR
else
  echo "Directory $TARGET_DIR exists."
  echo "For a fresh download remove files in that directory."
  echo
fi

# retrieve TEI files from Theatre Classique
for url in $($LYNX | $GREP); do
  name=$(basename $url)
  file="$TARGET_DIR/$name"

  if ! [[ -f $file ]] || [[ -n "$ALL" ]]; then
    wget -O $file $url
    rc=$?
    if [ $rc == 0 ]; then
      # add newline to end of originals for cleaner diffs
      echo >> $file
    elif [ $rc == 8 ]; then
      # ignore 404 or other server errors
      rm $file
      echo "Server error. Ignoring file!"
      echo
    else
      # abort on other errors
      exit 1
    fi
    [ -z $VERBOSE ] || echo "waiting $DELAY seconds..."
    sleep $DELAY
  else
    [ -z $VERBOSE ] || echo "skipping $name"
  fi
done
